// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TestServicesTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void testServices() {
    driver.get("https://www.staples.ca/");
    driver.manage().window().setSize(new Dimension(1550, 838));
    js.executeScript("window.scrollTo(0,48)");
    js.executeScript("window.scrollTo(0,893.5999755859375)");
    driver.findElement(By.id("accessible-megamenu-nav-item-Services")).click();
    js.executeScript("window.scrollTo(0,244.8000030517578)");
    driver.findElement(By.cssSelector(".accessible-megamenu-panel-group-columns:nth-child(3) > li:nth-child(3) .article-link__cta")).click();
    assertThat(driver.findElement(By.cssSelector(".col-sm-5 > .btn")).getText(), is("Go"));
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".col-sm-5 > .btn"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("storeLocation")).click();
    driver.findElement(By.cssSelector(".vertical-center")).click();
    {
      WebElement element = driver.findElement(By.id("storeLocation"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.id("storeLocation"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.id("storeLocation"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.id("storeLocation")).click();
    {
      WebElement dropdown = driver.findElement(By.id("storeLocation"));
      dropdown.findElement(By.xpath("//option[. = 'Toronto - University Ave']")).click();
    }
    driver.findElement(By.cssSelector(".col-sm-7 option:nth-child(7)")).click();
    {
      WebElement element = driver.findElement(By.id("storeLocation"));
      String value = element.getAttribute("value");
      String locator = String.format("option[@value='%s']", value);
      String selectedText = element.findElement(By.xpath(locator)).getText();
      assertThat(selectedText, is("Select a location\\nKelowna\\nOakville\\nOttawa\\nToronto - Corktown\\nToronto - Midtown\\nToronto - University Ave"));
    }
    driver.findElement(By.cssSelector("html")).click();
    driver.findElement(By.id("spaces")).click();
    driver.findElement(By.cssSelector(".col-sm-5 > .btn")).click();
    {
      List<WebElement> elements = driver.findElements(By.linkText("Book a tour"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".item-loc:nth-child(1) .desc-space"));
      assert(elements.size() > 0);
    }
  }
}
