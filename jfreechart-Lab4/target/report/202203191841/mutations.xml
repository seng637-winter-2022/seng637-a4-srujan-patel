<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combine</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combine</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combine</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::combine</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combine</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>17</index><block>3</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::combine</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combine</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>42</index><block>11</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::combine</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>20</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>20</index><block>5</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::combineIgnoringNaN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>39</index><block>10</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::combineIgnoringNaN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>77</index><block>23</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::combineIgnoringNaN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>4</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>41</index><block>6</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::constrain</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>0</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>20</index><block>4</block><killingTest/><description>replaced boolean return with true for org/jfree/data/Range::contains</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>4</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>45</index><block>6</block><killingTest/><description>replaced boolean return with false for org/jfree/data/Range::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>1</block><killingTest/><description>replaced boolean return with true for org/jfree/data/Range::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>27</index><block>3</block><killingTest/><description>replaced boolean return with true for org/jfree/data/Range::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>40</index><block>5</block><killingTest/><description>replaced boolean return with true for org/jfree/data/Range::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>3</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>4</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>4</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>5</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>5</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>5</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>4</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest/><description>removed call to org/jfree/chart/util/ParamChecks::nullNotPermitted</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>57</index><block>7</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::expand</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>9</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::expandToInclude</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>7</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::expandToInclude</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>12</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::expandToInclude</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>51</index><block>13</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::expandToInclude</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getCentralValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>0</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getCentralValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>0</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getCentralValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>0</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getCentralValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>0</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::getCentralValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getLength</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getLength</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>0</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::getLength</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getLowerBound</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::getLowerBound</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getUpperBound</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::getUpperBound</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>2</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>2</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>2</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>38</index><block>2</block><killingTest/><description>replaced int return with 0 for org/jfree/data/Range::hashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>0</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>6</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>22</index><block>4</block><killingTest/><description>replaced boolean return with true for org/jfree/data/Range::intersects</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>42</index><block>9</block><killingTest/><description>replaced boolean return with true for org/jfree/data/Range::intersects</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>3</block><killingTest/><description>replaced boolean return with false for org/jfree/data/Range::intersects</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>3</block><killingTest/><description>replaced boolean return with true for org/jfree/data/Range::intersects</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>isNaNRange</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>isNaNRange</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>isNaNRange</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>18</index><block>6</block><killingTest/><description>replaced boolean return with true for org/jfree/data/Range::isNaNRange</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>2</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>19</index><block>5</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>26</index><block>7</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>2</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::min</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>19</index><block>5</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::min</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>26</index><block>7</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::min</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>5</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>6</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest/><description>removed call to org/jfree/chart/util/ParamChecks::nullNotPermitted</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>37</index><block>7</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::scale</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::shift</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>4</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest/><description>removed call to org/jfree/chart/util/ParamChecks::nullNotPermitted</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>27</index><block>5</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::shift</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>11</block><killingTest/><description>replaced return value with null for org/jfree/data/Range::shift</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>3</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>1</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>4</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>6</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>14</index><block>2</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::shiftWithNoZeroCrossing</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>29</index><block>5</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::shiftWithNoZeroCrossing</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>36</index><block>6</block><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::shiftWithNoZeroCrossing</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>8</index><block>0</block><killingTest/><description>replaced return value with &#34;&#34; for org/jfree/data/Range::toString</description></mutation>
</mutations>
